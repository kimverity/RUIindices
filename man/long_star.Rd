% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/long_star.R
\name{long_star}
\alias{long_star}
\title{Calculates longitudinal or star mean}
\usage{
long_star(
  file,
  node_abundances = FALSE,
  mean_type,
  index_letter = "D",
  q = 1,
  individual = FALSE
)
}
\arguments{
\item{file}{A string or phylo object; String of file name containing tree or 
the tree itself either as a string or a phylo object}

\item{node_abundances}{A dataframe containing node abundance data for tree;
the first column must contain the node labels and second column the corresponding 
node abundance data; if no abundance data is known, don't provide an input and
code will assign leaves to be equally abundant and internal nodes to have size
zero}

\item{mean_type}{A string; string containing desired mean type, either "star"
or "longitudinal"}

\item{index_letter}{A string; a string containing a single letter, either 
"D" or "J" to specify desired index, if calculating all indices input 
does not matter}

\item{q}{A number; either 0 or 1 specifying desired index; if calculating
J only q=1 will be returned, if calculating all indices input does not matter}

\item{individual}{A boolean; either TRUE if only one index is desired or
FALSE if all indices are desired}
}
\value{
Either; single number for the chosen index or a dictionary with each
index value (for the key, if index is 1DS key is D1S)
}
\description{
Calculates the longitudinal or star mean for D for q=0 or 1, or J for q =1,
or all for one mean type. The default, changed by specifying index letter, q 
and individual, is to calculate all index values for mean type.
}
\examples{
tree <- '(a:1,(b:0.5,c:0.5)e:0.5)d:0;'
tree_abundance <- data.frame("Names" = c("e", "d", "b", "c", "a"), 
                             "Values" = c(0, 0, 1/3, 1/3, 1/3))
long_star(tree, tree_abundance, "Longitudinal", "D", 1, TRUE)

}
